[1]
b=<b>$</b>$
black=#000000
blue=#0000FF
body=<body>\n	$\n</body>\n$
br=<br />\n$
comment=<!-- $ -->\n$
cook=\$$=\$_COOKIE['$'];
css=<link rel="stylesheet" type="text/css" href="$.css" />
cyan=#00FFFF
switch=switch ($)\n{\n	case $:\nbreak;\n                $\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
enum=function enum_select(\$table,\$field) {\n    \$result=mysql_query("SHOW COLUMNS FROM `\$table` LIKE '\$field'");\n    if(mysql_num_rows(\$result)>0){\n        \$row=mysql_fetch_row(\$result);\n        \$options=explode("','", preg_replace("/(enum|set)\('(.+?)'\)/","\\2", \$row[1]));\n        \$options2 = array();\n		\$i=0;\n        foreach (\$options as \$value) {\n            \$options2[\$i]=\$value;\n			\$i++;            \n        }        \n    } else {\n        \$options=array();\n    }\n    return \$options2;\n} 
dbquery=\$sql = "$";\n\$result =\$db->query(\$sql);\nif (DB::isError(\$result)) {\n	echo \$sql;\n	    die(\$result->getMessage());        \n	}
dbresult=\$arr = array();\n	while (\$row =\n\$result->fetchRow(DB_FETCHMODE_ASSOC)){\n    \$arr[] = \$row;\n	}\n$
div=<div id="$"></div>
docroot=\$doc_root = \$_SERVER['DOCUMENT_ROOT'];\n
def=define('$',$);
extcombo=new Ext.form.ComboBox({\nstore: new Ext.data.Store({\nproxy: new Ext.data.HttpProxy({url: '$.php'}),\nreader:	new Ext.data.JsonReader({id: 1},\n[\n{name: 'id'},\n{name: '$'},\n])\n}),\ndisplayField:'$',\nvalueField:'$id',\nhiddenName: '$',\ntypeAhead: true,\ntriggerAction: 'all',\nemptyText:'Select...',\nselectOnFocus:true\n});\n
extconn=var c = new Ext.data.Connection;\n	c.request({\n			method: 'GET', \n			url: '$.php?'+param,\n			callback: doResponse,\n			waitMsg: 'Please wait ....'\n			});\n		};\n\n	doResponse = function (object, success, response){\n		if(success) {\n				Ext.Msg.alert('Success','$');\n				}else{				\n				Ext.Msg.alert('Error','Failed! Please try again.');\n			}\n	}
extform=new Ext.FormPanel({\n	labelWidth: 75,\n	frame: true,\n	url: '$',\n	title: '$',\n	items: [\n	],\n	buttons: [{\n				text: '$',\n						handler:function(){\n							}\n		}]\n	});\n
extformsubmit=$.form.submit({\n			waitMsg: 'Please wait whilesaving.......',\n			success: function(){\n				Ext.Msg.alert('Information','Successfully saved.');\n			},\n			failure: function(){\n			Ext.Msg.alert('Error','Error while saving.');\n			}\n		});\n
echo=echo "<br />The value is ".\$$;
for=for(\$i=0;\$i<$;\$i++)\n{\n$\n}
form=<form action="$.php" method="post">\n	<input type="$" name="$" />\n</form>\n$
green=#00FF00
grey=#C0C0C0
h1=<h1>$</h1>\n$
h2=<h2>$</h2>\n$
h3=<h3>$</h3>\n$
h4=<h4>$</h4>\n$
h5=<h5>$</h5>\n$
h6=<h6>$</h6>\n$
head=<head>\n	$\n</head>\n$
html=<!DOCTYPE html>\n<html>\n	<head>\n		<title>$</title>\n		$\n	</head>\n	<body>\n		$\n	</body>\n</html>\n$
i=<i>$</i>$
img=<img src="$" alt="$" />\n$
init=mysql_connect("localhost","root","");\n@mysql_select_db($) or die( "Unable to select database");
input=<input type="$" name="$" />\n$
jexec=defined('_JEXEC') or die('Restricted access');
jq=$db = & JFactory::getDBO();\n$query = "SELECT * FROM #__$";\n$db->setQuery($query);
jfetch=$result = $db->loadObjectList();
jimp=jimport('joomla.application.component.$');
jass=$this->assignRef('$',\$$);
ado=<audio src="$"></audio>
vdo=<video src="$"></video>
sec=<section>$</section>
nav=<nav>$</nav>
footr=<footer>$</footer>
headr=<header>$</header
label=<label>$<label>
li=<li>$</li>\n$
link=<a href="$">$</a>$
loop=for(\$i=0;\$i<\$num;\$i++)\n{\n\$$=mysql_result(\$result,\$i,'$');\n}
fetch=while(\$row = @mysql_fetch_object(\$result)){\n\n}
mangenta=#FF00FF
n=\$num = mysql_num_rows(\$result);\n$
nbsp=&nbsp;
num=\$num = \$result->numRows();
ol=<ol>\n	<li>$</li>\n	$\n</ol>\n$
option=<option>$</option>
p=<p>$</p>\n$
psmass=\$main_smarty->assign('$',$);
pisgod=\$canIhaveAccess = 0;\n    \$canIhaveAccess = \$canIhaveAccess + checklevel('god');\n    if(\$canIhaveAccess == 1) {\n	$\n}
purl=my_base_url.my_pligg_base
po=\$$=\$_POST['$'];
pre=<pre>$</pre>\n$
q=\$sql = "SELECT * FROM $";\n\$result = mysql_query(\$sql) or die(\$sql.'<br />'.mysql_error());\n$
rq=resources/query/$
ri=resources/includes/$
rc=resources/components/$
rs=resources/sitefiles/$
rc=resources/css/$
rj=resources/js/$
rimg=resources/images/$
red=#FF0000
req=require('init.php');\n$
res=\$$=mysql_result(\$result,\$i,'$');\n$
rndcss=.boxtop, .boxtop div {\n    height: 8px;\n    font-size: 1px;\n}\n.boxbot div,\n.boxbot{\n    height: 8px;\n    font-size: 1px;\n}\n.boxtop {\n    background: url(images/boxtright.gif) no-repeat top right;\n}\n.boxtop div {\n    background: url(images/boxtleft.gif) no-repeat top left;\n}\n.boxtop .tbg {\n    margin:0px 8px;\n    background: url(images/boxtbg.gif) repeat-x top right;\n}\n.boxbot .bbg {\n   \n margin:0 8px;\n    background: url(images/boxbbg.gif) repeat-x bottom;\n}\n.boxbot div {\n    background: url(images/boxbleft.gif) no-repeat bottom left;\n}\n.boxbot {\n    background: url(images/boxbright.gif) no-repeat bottom right;\n}\n\n.boxrbg {\n    background: url(images/boxrbg.gif) repeat-y top right;\n}\n.boxlbg {\n    background: url(images/boxlbg.gif) repeat-y top left;\n}\n.boxwrap {\n    margin:0pt 8px;\n    padding:5px 8px;\n    background: #F9F7ED;\n}\n
rndbox=<div class="boxtop"><div><div class="tbg"></div></div></div><div class="boxrbg"><div class="boxlbg"><div class="boxwrap">\n$\n</div></div></div><div class="boxbot"><div><div class="bbg"></div></div></div>
script=<script type="text/javascript">\n$\n</script>
scriptsrc=<script type="text/javascript" src="$" ></script>\n
select=<select name="$">\n<option>$</option>\n$\n</select>
span=<span>$</span>$
sset=sfContext::getInstance()->getRequest()->setParameter('$', $); 
sget=$sf_request->getParameter('$');
style=<style type="text/css">\n$\n</style>
switch=switch ($)\n{\n	case $:\nbreak;\n                $\n}\n$
sfcss=<?php echo stylesheet_tag('$);?>
sfjs=<?php echo javascript_include_tag('$');?>
sfq=\$connection = Propel::getConnection();\n\$sql = "SELECT * FROM $";\n\$stmt = \$connection->prepareStatement(\$sql);\n\$resultSet = \$stmt->executeQuery();
sffetch=while(\$resultSet->next()){\n \$$=\$resultSet->getString('$');\n}
sfimg=<?php echo image_tag('$');?>
sflink=<?php echo link_to('$');?>
sfparam=\$=$this->getRequestParameter('$');
sfselect=\$c = new Criteria();\n$c->add($Peer::ID,\$id);\$this->$=\$Peer::doSelect(\$c);
table=<table>\n	<tr>\n		<td>$</td>\n		$\n	</tr>\n	$\n</table>\n$
td=<td>$</td>\n$
text=<label>\n      $\n      <input type="text" name="$" />\n</label>
title=<title>$</title>\n$
tr=<tr>\n	$\n</tr>\n$
ul=<ul>\n	<li>$</li>\n	$\n</ul>\n$
upload=<form action="" method="post" enctype="multipart/form-data">\n	<input type="file" name="image" />\n	<input type="submit" name="" value="upload"/>	\n</form>\n<?\n	\$uploadfile = 'up/';\n	\$tmp = \$_FILES['image']['tmp_name'];\n	\$file_name = \$_FILES['image']['name'];\n	move_uploaded_file(\$tmp, \$uploadfile.\$file_name);\n?>
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
white=#FFFFFF
yellow=#FFFF00
a=<?= anchor('$', '$'); ?>
cfgitem=\$this->config->item('$')
cfgset=\$this->config->set_item('$', '$')
ci_c=class $ extends Controller {\n\n    function __construct() {\n        parent::Controller();\n    }\n\n    function index() {\n        $\n    }\n\n}
ci_m=class $_m extends Model {\n\n    function __construct() {\n        parent::Model();\n    }\n\n    $\n\n}
dbcount=\$this->db->count_all('$');
dbdelete=\$this->db->delete('$', array($));
dbfrom=\$this->db->from('$');
dbget=\$this->db->get('$');
dbgetwhere=\$this->db->getwhere('$', array($));
dbgroup=\$this->db->groupby(array($));
dbhaving=\$this->db->having(array($));
dbinsert=\$insert = array($);\n\n\$this->db->insert('$', \$insert);
dbjoin=\$this->db->join('$', '$');
dblike=\$this->db->like(array($));
dblimit=\$this->db->limit($);
dborder=\$this->db->orderby('$');
dborlike=\$this->db->orlike(array($));
dborwhere=\$this->db->orwhere(array($));
dbselect=\$this->db->select('$');
dbset=\$this->db->set(array($));
dbupdate=\$update = array($);\n\n\$this->db->update('$', \$update);
dbwhere=\$this->db->where('$', array($));
e=echo '$';
email=\$msg = $;\n\n\$this->email->from('$', '$');\n\$this->email->to('$');\n\$this->email->subject('$');\n\$this->email->message(\$msg);\n\$this->email->send();
f=function $($) {\n    $\n}
f_=function _$($) {\n    $\n}
foreach=foreach ($ as $) {\n    $\n}
ci_form=<?= form_open('$'); ?>\n    $\n<?= form_close(); ?>
formm=<?= form_open_multipart('$'); ?>\n    $\n<?= form_close(); ?>
if=if ($) {\n    $\n}
ifelse=if ($) {\n    $\n} else {\n    $\n}
ifelseif=if ($) {\n    $\n} elseif ($) {\n    $\n} else {\n    $\n}
loadconfig=\$this->load->config('$');
loadhelper=\$this->load->helper('$');
loadlang=\$this->load->lang('$');
loadlib=\$this->load->library('$');
loadplugin=\$this->load->plugin('$');
loadview=\$this->load->view('$');
md5=\$this->security->dohash('$', 'md5');
p?=<?= $; ?>
php=<?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\n$\n\n?>
post=\$this->input->post('$');
r=redirect('$');
sdata=\$this->input->session('$');
sha1=\$this->security->dohash('$');
ssetdata=\$this->session->set_userdata(array($));
switch=switch ($) {\n    case '$':\n        $\n    default:\n        $\n}
ci_upload=\$config['upload_path'] = '$';\n\$config['allowed_types'] = '$';\n\$this->load->library('upload', '\$config');\n\nif ($this->upload->do_upload()) {\n    $\n} else {\n    $\n}
val=if (\$this->validation->run()) {\n    $\n} else {\n    $\n}
valfield=\$fields['$'] = '$';
valrule=\$rules['$'] = '$';
valsetfields=\$this->validation->set_fields(\$fields);
valsetrule=\$this->validation->set_rules(\$rules);
while=while ($) {\n    $\n} 
[19]
ce=var $ = document.createElement('$');
docid=document.getElementById('$');
extcombo=new Ext.form.ComboBox({\nstore: new Ext.data.Store({\nproxy: new Ext.data.HttpProxy({url: '$.php'}),\nreader:	new Ext.data.JsonReader({id: 1},\n[\n{name: 'id'},\n{name: '$'},\n])\n}),\nfieldLabel:'$',\ndisplayField:'$',\nvalueField:'$id',\nhiddenName: '$',\ntypeAhead: true,\ntriggerAction: 'all',\nemptyText:'Select...',\nselectOnFocus:true\n});\n
extconn=var c = new Ext.data.Connection;\n	c.request({\n			method: 'GET', \n			url: '$.php?'+param,\n			callback: doResponse,\n			waitMsg: 'Please wait ....'\n			});\n		};\n\n	doResponse = function (object, success, response){\n		if(success) {\n				Ext.Msg.alert('Success','$');\n				}else{				\n				Ext.Msg.alert('Error','Failed! Please try again.');\n			}\n	}
extform=new Ext.FormPanel({\n	labelWidth: 75,\n	frame: true,\n	url: '$',\n	title: '$',\n	items: [\n	],\n	buttons: [{\n				text: '$',\n						handler:function(){\n							}\n		}]\n	});\n
extformsubmit=$.form.submit({\n			waitMsg: 'Please wait whilesaving.......',\n			success: function(){\n				Ext.Msg.alert('Information','Successfully saved.');\n			},\n			failure: function(){\n			Ext.Msg.alert('Error','Error while saving.');\n			}\n		});\n
[2]
case=case $: \n$\nbreak;
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	case $:\nbreak;\n                $\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[3]
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[6]
b=b="$";\n$
bb=b+="$";\n$
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
ff=writeFile(FileName,b);\nb="$";
for=for(int i=0;i<$;i++)\n{\n$\n}
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
sys=System.out.println("$");
sout=System.out.println("$");
syst=System.out.println($);
dom=DocumentBuilderFactory fact = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder =fact.newDocumentBuilder();\n        Document doc = builder.parse("$");\n        Node root =doc.getDocumentElement();        		\n		NodeList children = root.getChildNodes();\n		for (int i = 0; i < children.getLength(); i++){\n			Node n = children.item(i);\n				//System.out.println(n.getNodeName());\n		}
try=try{\n$		\n		}\n		catch(Exception e)\n		{\n		$\n		}
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[8]
b=<b>$</b>$
black=#000000
blue=#0000FF
body=<body>\n	$\n</body>\n$
br=<br/>\n$
comment=<!-- $ -->\n$
css=<link rel="stylesheet" type="text/css" href="$.css" />
cyan=#00FFFF
form=<form name="$" action="$">\n	$\n</form>\n$
green=#00FF00
grey=#C0C0C0
h1=<h1>$</h1>\n$
h2=<h2>$</h2>\n$
h3=<h3>$</h3>\n$
h4=<h4>$</h4>\n$
h5=<h5>$</h5>\n$
h6=<h6>$</h6>\n$
head=<head>\n	$\n</head>\n$
html=<html>\n	<head>\n		<title>$</title>\n		$\n	</head>\n	<body>\n		$\n	</body>\n</html>\n$
i=<i>$</i>$
img=<img src="$" alt="$" />\n$
input=<input type="$" name="$" />\n$
label=<label>$<label>
li=<li>$</li>\n$
link=<a href="$">$</a>$
mangenta=#FF00FF
ol=<ol>\n	<li>$</li>\n	$\n</ol>\n$
option=<option>$</option>
p=<p>$</p>\n$
pre=<pre>$</pre>\n$
red=#FF0000
rq=resources/query/$
ri=resources/includes/$
rc=resources/components/$
rs=resources/sitefiles/$
rc=resources/css/$
rj=resources/js/$
rimg=resources/images/$
script=<script type="text/javascript">\n$\n</script>
scriptsrc=<script type="text/javascript" src="$" ></script>\n
select=<select name="$">\n<option>$</option>\n$\n</select>
span=<span>$</span>$
style=<style type="text/css">\n$\n</style>
table=<table>\n	<tr>\n		<td>$</td>\n		$\n	</tr>\n	$\n</table>\n$
td=<td>$</td>\n$
text=<label>\n      $\n      <input type="text" name="$" />\n</label>
title=<title>$</title>\n$
tr=<tr>\n	$\n</tr>\n$
ul=<ul>\n	<li>$</li>\n	$\n</ul>\n$
white=#FFFFFF
yellow=#FFFF00
